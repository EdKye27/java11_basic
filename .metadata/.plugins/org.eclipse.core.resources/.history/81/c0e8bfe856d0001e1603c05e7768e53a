package org.kh.site;
//대입 연산자 : 연산 후에 대입하는 연산자 +=. -=. *=, /=, %=, &=, |=(2진수 연산), <<=, >>>=, ^= 
public class Operation7 {

	public static void main(String[] args) {
		int a = 20;
		int b = 15;
		int tmp;	//tmp =임시기억장소
		
		a += b;		// a=35, b=15
		b -= a;		// a=35, b=-20
		System.out.println("a = "+a);
		System.out.println("b = "+b);
		
		// a와 b의 값을 맞교환 하려면..
		tmp = a;	// 여기서 = 는 같다가 아닌, 입력하는 의미!
		a = b;
		b = tmp;
		System.out.println("******** 교환 후 *********");
		System.out.println("a = "+a);
		System.out.println("b = "+b);
		
		int x = 0b01101;
		int y = 0b01011;
//		System.out.println("x = "+x);	// 이렇게 하면 10진수로 출력된다
//		System.out.println("y = "+y);	// 이렇게 하면 10진수로 출력된다
		System.out.println("x = "+Integer.toBinaryString(x));	//2진수로 출력하기!
		System.out.println("y = "+Integer.toBinaryString(y));	
		System.out.println("x & y : "+Integer.toBinaryString(x & y));	//and
		System.out.println("x | y : "+Integer.toBinaryString(x | y));	//or
		System.out.println("x ^ y : "+Integer.toBinaryString(x ^ y));	//xor : 한쪽이 1이면 무조건 1, 2진수 계산기에 쓰인다 (0,1로만 표현되기에 2로 넘어가지 못하고 다음 자리수로 표기)
		System.out.println("~x : "+Integer.toBinaryString(~x));	//~는 not 을 의미 즉, 반대로 출력되게 된다
	
	}

}
